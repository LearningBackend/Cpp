Інкремент і Декремент:
є операторами (можливо трохи математичними) також

    setlocale(LC_ALL, "Rus");
    int a = 1;
    //a = a + 1;
    a++ або а--; // це і є інкремент/декремент
    cout << a << endl;

Отже інкремент це коли ми збільшуємо двома ++, а декремент це коли ми зменшуємо двома --.

У префіксной і постфіксной різни пріорітети виконання

постфіксний запис інкремента:
    
    int a = 1;
    a++;
    cout << a << endl;

префіксний запис інкремента:
    
    int a = 1;
    ++a;
    cout << a << endl;

//////////////////////////////////////////////
    
    int a = 1;
    cout << a << endl;
    
    cout << a++ << endl;

Тут виведеться 1 а не 2, тому що спочатку виводиться змінна на екран а інкременція постфіксна нижча по пріорітету(додавання одиниці) так саме і з постфіксною декременцією це працює

///////////////////////////////////////////////
   
   int a = 1;
   cout << a << endl;

   cout << --a << endl;

Тут вже буде префіксна інкременція та декременція і також виконається дія або -1 або +1, пріорітет спочатку стоїть виконати дію, а потім вже вивести оператора в консоль

///////////////////////////////

В цьому коді у нас буде 4, тому що префіксна інкременція я найприорітетнішою, тоді оскільки а = 1, далі ми додаємо 1 в а(це в частинні ++а), виходить а = 2, і ми домножуємо знову на а яка вже є двойкою, з цього виходить ++а * а = 2 * 2 = 4. 
    int a = 1, b;
    b = ++a * a;
    cout << b << endl;

////////////////////////////////////

Так, хулі тут в операторі а виводиться 3, я в душе не ебу, хоча єбу, ми спочатку маємо а = 1, потім ++а * a(по пріорітету вище) це вже буде 2, і далі по пріорітету буде вже постфікація а++, тобто ми просто до 2 додаємо 1, ++а * а = 2++ = 3.
    int a = 1, b;
    b = ++a * a++;
    cout << b << endl;
    cout << а << endl;