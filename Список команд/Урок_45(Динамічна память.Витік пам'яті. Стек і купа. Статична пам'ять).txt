Динамічна пам'ять:

Динамічна пам'ять в мові програмування вказує на пам'ять, яка виділяється під час виконання програми з метою зберігання даних, таких як об'єкти або масиви.
Використання динамічної пам'яті дозволяє створювати об'єкти змінної довжини або ті, що існують поза областями видимості.
Витік пам'яті:

Витік пам'яті (memory leak) виникає, коли програма виділяє динамічну пам'ять для об'єктів, але не звільняє її після закінчення використання.
Це призводить до непотрібного витрати пам'яті і може призвести до зменшення продуктивності програми.
Стек і Купа (Heap):

Стек і Купа є двома різними розділами пам'яті в програмах.
Стек - це місце, де зберігаються дані, пов'язані з викликами функцій, зокрема значення параметрів, адреси повернення та локальні змінні. Він працює за принципом "останній прийшов — перший вийшов".
Купа (Heap) - це місце для динамічно виділеної пам'яті, де розташовуються об'єкти, які можна використовувати поза областями видимості функцій.
Статична пам'ять:

Статична пам'ять в C++ - це область пам'яті, яка використовується для зберігання змінних, що зберігаються на протязі всього життя програми.
Змінні з статичною пам'яттю зазвичай оголошуються за допомогою ключових слів static або розташовуються поза функціями (на глобальному рівні).
Приклад статичної пам'яті в C++:

#include <iostream>

int globalVariable; // Змінна з статичною пам'яттю

int main() {
    static int staticVariable; // Статична локальна змінна
    return 0;
}

У цьому прикладі змінна globalVariable має статичну пам'ять і може бути використана в усій програмі. Змінна staticVariable є статичною локальною змінною функції main, її значення зберігатиметься між викликами функції.