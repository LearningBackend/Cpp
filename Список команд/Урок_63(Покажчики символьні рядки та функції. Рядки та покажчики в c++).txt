const char* strArr[] = { "Hello", "World", "Test" };

for (int i = 0; i < 3; i++)
{
	cout << strArr[i] << endl;
}

У C++, рядки часто представляються як масиви символів, і для роботи з ними використовуються покажчики. Ось приклади роботи з рядками та покажчиками:

Представлення рядків за допомогою масивів символів:
У C++ рядки часто представляються як масиви символів (тип char), де кінцевий символ масиву є нульовим символом ('\0'), що вказує на кінець рядка. Ось приклад створення рядка та виведення його в консоль:


#include <iostream>

int main() {
    char str[] = "Hello, World!";
    std::cout << str << std::endl;
    return 0;
}
Робота з покажчиками на символи:
Покажчики вказують на адреси пам'яті, і вони часто використовуються для ітерації по символам у рядках. Ось приклад виведення символів рядка за допомогою покажчика:


#include <iostream>

int main() {
    char str[] = "Hello, World!";
    char* ptr = str; // Вказівник на початок рядка

    while (*ptr != '\0') {
        std::cout << *ptr;
        ptr++; // Перехід до наступного символу
    }

    std::cout << std::endl;
    return 0;
}
У цьому прикладі ми використовуємо вказівник ptr, щоб пройти через кожен символ у рядку str до зустрічі нульового символу '\0'.

Використання функцій для роботи з рядками:
У C++ є ряд вбудованих функцій для роботи з рядками, які допомагають виконувати різноманітні операції над ними, такі як копіювання, порівняння, додавання і так далі. Один з прикладів використання функцій:


#include <iostream>
#include <cstring> // Підключення бібліотеки для рядкових функцій

int main() {
    char str1[] = "Hello, ";
    char str2[] = "World!";
    
    // Копіювання str2 до str1
    strcat(str1, str2);

    std::cout << str1 << std::endl;
    return 0;
}
У цьому прикладі ми використовуємо функцію strcat для додавання рядка str2 до рядка str1.